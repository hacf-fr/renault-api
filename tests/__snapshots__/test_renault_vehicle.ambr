# serializer version: 1
# name: test_get_endpoints[tests/fixtures/kamereon/vehicles/captur_ii.1.json]
  dict({
    'hvac-status': None,
  })
# ---
# name: test_get_endpoints[tests/fixtures/kamereon/vehicles/captur_ii.2.json]
  dict({
    'hvac-status': None,
  })
# ---
# name: test_get_endpoints[tests/fixtures/kamereon/vehicles/clio_v.1.json]
  dict({
    'hvac-status': None,
  })
# ---
# name: test_get_endpoints[tests/fixtures/kamereon/vehicles/duster.1.json]
  dict({
    'actions/charge-set-mode': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/actions/charge-mode', mode='default'),
    'actions/charge-set-schedule': EndpointDefinition(endpoint='/kca/car-adapter/v2/cars/{vin}/actions/charge-schedule', mode='default'),
    'actions/hvac-set-schedule': EndpointDefinition(endpoint='/kca/car-adapter/v2/cars/{vin}/actions/hvac-schedule', mode='default'),
    'actions/hvac-start': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/actions/hvac-start', mode='default'),
    'actions/hvac-stop': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/actions/hvac-start', mode='default'),
    'alerts': EndpointDefinition(endpoint='/vehicles/{vin}/alerts', mode='default'),
    'battery-status': EndpointDefinition(endpoint='/kca/car-adapter/v2/cars/{vin}/battery-status', mode='default'),
    'charge-history': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/charge-history', mode='default'),
    'charge-mode': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/charge-mode', mode='default'),
    'charge-schedule': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/charge-schedule', mode='default'),
    'charges': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/charges', mode='default'),
    'charging-settings': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/charging-settings', mode='default'),
    'cockpit': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/cockpit', mode='default'),
    'hvac-history': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/hvac-history', mode='default'),
    'hvac-sessions': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/hvac-sessions', mode='default'),
    'hvac-settings': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/hvac-settings', mode='default'),
    'hvac-status': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/hvac-status', mode='default'),
    'location': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/location', mode='default'),
    'lock-status': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/lock-status', mode='default'),
    'notification-settings': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/notification-settings', mode='default'),
    'pressure': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/pressure', mode='default'),
    'res-state': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/res-state', mode='default'),
    'soc-levels': EndpointDefinition(endpoint='/kcm/v1/vehicles/{vin}/ev/soc-levels', mode='default'),
  })
# ---
# name: test_get_endpoints[tests/fixtures/kamereon/vehicles/megane_e-tech.1.json]
  dict({
    'lock-status': None,
  })
# ---
# name: test_get_endpoints[tests/fixtures/kamereon/vehicles/megane_e-tech.2.json]
  dict({
    'lock-status': None,
  })
# ---
# name: test_get_endpoints[tests/fixtures/kamereon/vehicles/renault_5.1.json]
  dict({
    'charge-schedule': EndpointDefinition(endpoint='/kcm/v1/vehicles/{vin}/ev/settings', mode='default'),
  })
# ---
# name: test_get_endpoints[tests/fixtures/kamereon/vehicles/spring.1.json]
  dict({
    'charge-mode': None,
    'lock-status': None,
    'res-state': None,
  })
# ---
# name: test_get_endpoints[tests/fixtures/kamereon/vehicles/twingo_ze.1.json]
  dict({
    'lock-status': None,
    'res-state': None,
  })
# ---
# name: test_get_endpoints[tests/fixtures/kamereon/vehicles/zoe_40.1.json]
  dict({
    'battery-status': EndpointDefinition(endpoint='/kca/car-adapter/v2/cars/{vin}/battery-status', mode='default'),
    'charge-mode': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/charge-mode', mode='default'),
    'charge-schedule': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/charge-schedule', mode='default'),
    'cockpit': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/cockpit', mode='default'),
    'hvac-status': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/hvac-status', mode='default'),
    'location': None,
    'lock-status': None,
    'pressure': None,
    'res-state': None,
    'soc-levels': None,
  })
# ---
# name: test_get_endpoints[tests/fixtures/kamereon/vehicles/zoe_40.2.json]
  dict({
    'battery-status': EndpointDefinition(endpoint='/kca/car-adapter/v2/cars/{vin}/battery-status', mode='default'),
    'charge-mode': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/charge-mode', mode='default'),
    'charge-schedule': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/charge-schedule', mode='default'),
    'cockpit': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/cockpit', mode='default'),
    'hvac-status': EndpointDefinition(endpoint='/kca/car-adapter/v1/cars/{vin}/hvac-status', mode='default'),
    'location': None,
    'lock-status': None,
    'pressure': None,
    'res-state': None,
    'soc-levels': None,
  })
# ---
# name: test_get_endpoints[tests/fixtures/kamereon/vehicles/zoe_50.1.json]
  dict({
    'lock-status': None,
    'res-state': None,
  })
# ---
# name: test_http_get
  KamereonResponse(raw_data={'data': {'type': 'Car', 'id': 'VF1AAAAA555777999', 'attributes': {'calendar': {'monday': [{'startTime': '2300', 'duration': 480, 'activationState': False}], 'tuesday': [{'startTime': '2300', 'duration': 480, 'activationState': False}], 'wednesday': [{'startTime': '2300', 'duration': 480, 'activationState': False}], 'thursday': [{'startTime': '2300', 'duration': 480, 'activationState': False}], 'friday': [{'startTime': '2300', 'duration': 480, 'activationState': False}], 'saturday': [{'startTime': '2300', 'duration': 480, 'activationState': False}], 'sunday': [{'startTime': '2300', 'duration': 480, 'activationState': False}]}}}}, errors=None)
# ---
# name: test_http_post
  KamereonResponse(raw_data={'data': {'type': 'ChargingStart', 'id': 'guid', 'attributes': {'action': 'start'}}}, errors=None)
# ---
# name: test_http_post.1
  dict({
    'data': dict({
      'attributes': dict({
        'action': 'start',
      }),
      'type': 'ChargingStart',
    }),
  })
# ---
# name: test_set_ac_start
  dict({
    'data': dict({
      'attributes': dict({
        'action': 'start',
        'startDateTime': '2020-11-24T06:30:00Z',
        'targetTemperature': 21,
      }),
      'type': 'HvacStart',
    }),
  })
# ---
# name: test_set_ac_stop
  dict({
    'data': dict({
      'attributes': dict({
        'action': 'cancel',
      }),
      'type': 'HvacStart',
    }),
  })
# ---
# name: test_set_charge_mode
  dict({
    'data': dict({
      'attributes': dict({
        'action': 'schedule_mode',
      }),
      'type': 'ChargeMode',
    }),
  })
# ---
# name: test_set_charge_schedules
  dict({
    'data': dict({
      'attributes': dict({
        'schedules': list([
        ]),
      }),
      'type': 'ChargeSchedule',
    }),
  })
# ---
# name: test_set_charge_start
  dict({
    'data': dict({
      'attributes': dict({
        'action': 'start',
      }),
      'type': 'ChargingStart',
    }),
  })
# ---
# name: test_set_hvac_schedules
  dict({
    'data': dict({
      'attributes': dict({
        'schedules': list([
        ]),
      }),
      'type': 'HvacSchedule',
    }),
  })
# ---
